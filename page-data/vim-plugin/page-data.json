{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/vim-plugin","result":{"data":{"post":{"__typename":"MdxPost","slug":"/vim-plugin","title":"Vim Plugin","date":"07.04.2021","tags":[{"name":"Vim","slug":"vim"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Vim Plugin\",\n  \"date\": \"2021-04-07T00:00:00.000Z\",\n  \"tags\": [\"Vim\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":PluginList\"), \"       - lists configured plugins\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":PluginInstall\"), \"    - installs plugins; append \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"!\"), \" to update or just :PluginUpdate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":PluginSearch foo\"), \" - searches for foo; append \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"!\"), \" to refresh local cache\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":PluginClean\"), \"      - confirms removal of unused plugins; append \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"!\"), \" to auto-approve removal\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"set nocompatible              \\\" be iMproved, required\\nfiletype off                  \\\" required\\nset rtp+=~/.vim/bundle/Vundle.vim\\ncall vundle#begin()\\n\\n\\n\\\" \\uD50C\\uB7EC\\uADF8\\uC778\\nPlugin 'VundleVim/Vundle.vim'\\nPlugin 'drewtempelmeyer/palenight.vim'\\nPlugin 'pangloss/vim-javascript'\\nPlugin 'mxw/vim-jsx'\\nPlugin 'vim-airline/vim-airline'\\nPlugin 'vim-airline/vim-airline-themes'\\n\\ncall vundle#end()            \\\" required\\nfiletype plugin indent on    \\\" required\\n\\n\\\" \\uAE30\\uBCF8 \\uC138\\uD305\\nsyntax on           \\\" Syntax Highlighting\\nset autoindent      \\\" \\uC790\\uB3D9 \\uC778\\uB374\\uD2B8\\nset cindent\\nset nu              \\\" \\uC904 \\uB118\\uBC84\\nset shiftwidth=2    \\\" \\uC790\\uB3D9 \\uB4E4\\uC5EC\\uC4F0\\uAE30 4\\uCE78\\nset tabstop=2       \\\" \\uD0ED 4\\uCE78\\nset mouse=a         \\\" vim\\uC5D0\\uC11C \\uB9C8\\uC6B0\\uC2A4 \\uC0AC\\uC6A9\\nset autowrite       \\\" \\uB2E4\\uB978 \\uD30C\\uC77C\\uB85C \\uB118\\uC5B4\\uAC08 \\uB54C \\uC790\\uB3D9 \\uC800\\uC7A5\\nset autoread        \\\" \\uC791\\uC5C5 \\uC911\\uC778 \\uD30C\\uC77C \\uC678\\uBD80\\uC5D0\\uC11C \\uBCC0\\uACBD\\uB42C\\uC744 \\uACBD\\uC6B0 \\uC790\\uB3D9\\uC73C\\uB85C \\uBD88\\uB7EC\\uC634\\n\\n\\n\\n\\\" \\uD14C\\uB9C8 \\uC138\\uD305\\nset background=dark\\ncolorscheme palenight\\n\\n\\\" jsx \\uD50C\\uB7EC\\uADF8\\uC778 \\uC138\\uD305\\nlet g:jsx_ext_required = 0 \\\" jsx \\uC124\\uC815\\n\\n\\\" airline \\uD50C\\uB7EC\\uADF8\\uC778 \\uC138\\uD305\\nlet g:airline_theme = \\\"palenight\\\"\\nlet g:airline#extensions#tabline#formatter = 'jsformatter'\\nlet g:airline_powerline_fonts = 1 \\n\\n\\\" True Colors\\nif (has(\\\"nvim\\\"))\\n  \\\"For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >\\n  let $NVIM_TUI_ENABLE_TRUE_COLOR=1\\nendif\\n\\\"For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >\\n\\\"Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >\\n\\\" < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >\\nif (has(\\\"termguicolors\\\"))\\n  set termguicolors\\nendif\\n\\n\\\" \\uB9C8\\uC9C0\\uB9C9\\uC73C\\uB85C \\uC218\\uC815\\uB41C \\uACF3\\uC5D0 \\uCEE4\\uC11C\\uB97C \\uC704\\uCE58\\uD568\\nau BufReadPost *\\n\\\\ if line(\\\"'\\\\\\\"\\\") > 0 && line(\\\"'\\\\\\\"\\\") <= line(\\\"$\\\") |\\n\\\\ exe \\\"norm g`\\\\\\\"\\\" |\\n\\\\ endif\\n\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":":PluginList        - lists configured plugins :PluginInstall     - installs plugins; append  !  to update or just :PluginUpdateâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/vim-plugin","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}